name: Publish

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Get latest release TAG and SHA
        id: tag-and-sha
        run: |
          tag_and_sha=$(
            gh api -X GET /repos/${{ github.repository }}/git/matching-refs/tags/ \
              | jq -r '.[] | select(.ref | test("^refs/tags/v.*")) | .ref[10:] + " " + .object.sha' \
              | sort -V -r \
              | head -n 1
          )
          tag=$(echo "${tag_and_sha}" | awk '{print $1}')
          sha=$(echo "${tag_and_sha}" | awk '{print $2}')
          echo "Latest release tag: ${tag}"
          echo "Latest release sha: ${sha}"
          echo tag=${tag} >> $GITHUB_OUTPUT;
          echo sha=${sha} >> $GITHUB_OUTPUT;

      - name: Check for breaking changes
        run: |
          tag=${{ steps.tag-and-sha.outputs.tag }}
          sha=${{ steps.tag-and-sha.outputs.sha }}
          
          commits=$(
            gh api repos/${{ github.repository }}/commits --paginate \
              -q ".[] | {sha: .sha, message: .commit.message}"
          )
          IFS=$'\n' read -ra commit_array <<< "$commits"
  
          commits_since_sha=""
          for commit in "${commit_array[@]}"; do
            commit_sha=$(echo "$commit" | awk '{print $2}')
            echo "SHA: ${commit_sha}"
            echo "Commit: ${commit_array[$commit]}"
            if [ "$commit_sha" == "$sha" ]; then
              break
            fi
            commits_since_sha+="$commit"$'\n'
          done
          
          echo "Commits since ${tag}:"
          echo "${commits_since_sha}"

      - name: Publish
        if: false
        env:
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew publish
