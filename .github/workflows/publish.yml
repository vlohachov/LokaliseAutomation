name: Publish

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Get latest release TAG
        id: get-tag
        run: |
          latest_release_tag=$(git for-each-ref --sort=-committerdate --format='%(refname:short)' 'refs/tags/v*' | head -n 1)
          echo "Latest release tag: ${latest_release_tag}"
          echo tag=${latest_release_tag} >> $GITHUB_OUTPUT;

      - name: Check for breaking changes
        id: breaking-changes
        run: |
          breaking_commits=$(git log ${{ steps.get-tag.outputs.tag }}..HEAD --format=%B --grep="BREAKING CHANGE: ")
          if [[ ${breaking_commits} != "" ]]; then
            result=true
          fi
          echo result=${result:-false} >> $GITHUB_OUTPUT;

      - name: Generate new version
        run: |
          breaking=${{ steps.breaking-changes.outputs.result }}
          echo "Is breaking: ${breaking}"
          latest_release_tag=${{ steps.get-tag.outputs.tag }}
          current_version=${latest_release_tag:1}
          echo "Current version: ${current_version}"
          if [[ ${{ steps.breaking-changes.output.result == 'true' }} ]]; then
            new_version="$((current_version[0]+1)).0.0"
          else
            new_version="${current_version[0]}.${current_version[1]+1}.0"
          fi
          echo "New version: ${new_version}"

      - name: Publish
        if: false
        env:
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew publish
