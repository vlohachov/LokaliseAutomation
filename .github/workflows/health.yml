name: Check dependencies health

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on: 
  #schedule:
    #- cron: '*/15 * * * *'
  pull_request:
  workflow_dispatch:
  
jobs:
  Health_check:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3.1.0
    
    - name: Check health
      id: check_health
      run: |
        ./gradlew buildHealth
        report_txt_file=build/reports/dependency-analysis/build-health-report.txt
        if [[ -f $report_txt_file && -s $report_txt_file ]]; then
          echo "Report .txt is successfully generated"
          echo report_txt_file=$report_txt_file >> $GITHUB_OUTPUT;
        else 
          echo "Report .txt is missing"
          echo report_txt_file= >> $GITHUB_OUTPUT;
        fi
        report_json_file=build/reports/dependency-analysis/build-health-report.json
        if [[ -f $report_json_file && -s $report_json_file ]]; then
          echo "Report .json is successfully generated"
          echo report_json_file=$report_json_file >> $GITHUB_OUTPUT;
        else 
          echo "Report .json is missing"
          echo report_json_file= >> $GITHUB_OUTPUT;
        fi
        
    - name: Report
      id: report
      if: ${{ steps.check_health.outputs.report_txt_file != '' && steps.check_health.outputs.report_json_file != '' }}
      continue-on-error: true
      run: |
        report_data="$(cat ${{ steps.check_health.outputs.report_json_file }})"
        report="$(cat ${{ steps.check_health.outputs.report_txt_file }})"
        echo "$report"
        delimiter="$(openssl rand -hex 8)"
        echo "report<<${delimiter}" >> ${GITHUB_OUTPUT}
        echo "$report" >> ${GITHUB_OUTPUT}
        echo "${delimiter}" >> ${GITHUB_OUTPUT}
        echo report_data=$report_data >> $GITHUB_OUTPUT
        exit 1
        
    - name: Generate comment message
      id: generate_comment_message
      if: ${{ steps.report.outputs.report != '' && steps.report.outputs.report_data != '' }}
      run: |
        unused_count=${{ fromJson(steps.report.outputs.report_data).unusedCount }}
        undeclared_count=${{ fromJson(steps.report.outputs.report_data).undeclaredCount }}
        mis_declared_count=${{ fromJson(steps.report.outputs.report_data).misDeclaredCount }}
        compile_only_count=${{ fromJson(steps.report.outputs.report_data).compileOnlyCount }}
        runtime_only_count=${{ fromJson(steps.report.outputs.report_data).runtimeOnlyCount }}
        processor_count=${{ fromJson(steps.report.outputs.report_data).processorCount }}
        
        message="## ⚠ Dependencies Health Check ⚠\n\n"
        message+="Some issues were detected during health check:\n\n"
        
        message+="\nSee report to get more insights.\n\n"
        message+="\<details\>\<summary\>Full Report\</summary\>\<p\>\n\n"
        message+="### Advices for ${{ github.event.repository.name }}:\n\n"
        message+="${{ steps.report.outputs.report }}\n\n"
        message+="\</p\>\</details\>"
        
        echo "$message"
        
    - name: Comment on PR
      if: ${{ steps.generate_comment_message.outputs.message != '' }}
      uses: mshick/add-pr-comment@v2
      with:
        message-id: health_check
        message: ${{ steps.generate_comment_message.outputs.message }}
          
